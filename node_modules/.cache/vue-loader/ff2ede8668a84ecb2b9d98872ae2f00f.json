{"remainingRequest":"D:\\DevelopTools\\IDEA\\IDEA-workspace\\kapcb-website\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\DevelopTools\\IDEA\\IDEA-workspace\\kapcb-website\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\DevelopTools\\IDEA\\IDEA-workspace\\kapcb-website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DevelopTools\\IDEA\\IDEA-workspace\\kapcb-website\\src\\pages\\home\\nav\\index.vue?vue&type=template&id=26bc8f8c&scoped=true&","dependencies":[{"path":"D:\\DevelopTools\\IDEA\\IDEA-workspace\\kapcb-website\\src\\pages\\home\\nav\\index.vue","mtime":1641200261438},{"path":"D:\\DevelopTools\\IDEA\\IDEA-workspace\\kapcb-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DevelopTools\\IDEA\\IDEA-workspace\\kapcb-website\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\DevelopTools\\IDEA\\IDEA-workspace\\kapcb-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DevelopTools\\IDEA\\IDEA-workspace\\kapcb-website\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}